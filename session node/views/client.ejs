<!DOCTYPE html>
<html>
<link href="/css/fonts/font-awesome.min.css" rel="stylesheet">
<link href="/css/bootstrap.min.css" rel="stylesheet">

<link href="/css/style.css" rel="stylesheet">

<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Complex Polylines</title>



    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>

    <script src="https://cdn.socket.io/socket.io-1.1.0.js"></script>
    <script>
        // This example creates an interactive map which constructs a
        // polyline based on user clicks. Note that the polyline only appears
        // once its path property contains two LatLng coordinates.

        var poly;
        var map;
        var currentMarker;
        var dotArray= <%- JSON.stringify(message)%>;
        var cityCircle;

        window.onload = function(){



            socket = io.connect('/');
            var session=(document.location.href).split('/load/')[1];
            socket.on(session, function (newValue) {//au lieu de fait une alerte mettre la room de l url
                var multipleLocation=newValue.split(';')
                console.log(multipleLocation);
                for(var locationIndex=0;locationIndex<multipleLocation.length;locationIndex++){

                    alert('new value '+multipleLocation[locationIndex])
                    var position=multipleLocation[locationIndex].split(',')
                    if(!(isNaN(position[0])&&isNaN(position[1])))
                    {
                        addMark(position[0],position[1])

                    }

                }


            });
        }


        function load(storedValue){

            for(var index=storedValue.length-1;index>=0;index--){
                var multipleLocation=storedValue[index].split(';')
                for(var locationIndex=0;locationIndex<multipleLocation.length;locationIndex++){

                    //alert('new value '+multipleLocation[locationIndex])
                    var position=multipleLocation[locationIndex].split(',')
                    if(!(isNaN(position[0])&&isNaN(position[1])))
                    {
                        addMark(position[0],position[1])

                    }

                }


            }

        }
        function addMark(x,y){


            if(currentMarker!=null){


                var populationOptions = {
                    strokeColor: '#10BBE6',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#10BBE6',
                    fillOpacity: 0.35,
                    map: map,
                    center: new google.maps.LatLng(currentMarker.position.k, currentMarker.position.D),
                    radius: 1
                };
                // Add the circle for this city to the map.
                cityCircle = new google.maps.Circle(populationOptions);
                // alert("add circle"+populationOptions.center)
                currentMarker.setMap(null);
                currentMarker=null;



            }

            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(x, y),
                title: '#location',
                opacity:0.35,
                map: map
            });

            currentMarker=marker;
            currentMarker.setOpacity(100);


///wrf to be removed
            // Add a new marker at the new plotted point on the polyline.
            /**var marker = new google.maps.Marker({
    position: new google.maps.LatLng(x, y),
    title: '#location',
      fillColor: '#FF0000',
    map: map
  });
             **/
            map.setCenter( new google.maps.LatLng(x, y))


            currentMarker.fillColor='#ff0080';
            currentMarker=marker;

        }
        function initialize() {
            var mapOptions = {
                zoom: 20,
                // Center the map on Chicago, USA.
                center: new google.maps.LatLng(41.879535, -87.624333)
            };

            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

            var polyOptions = {
                strokeColor: '#000000',
                strokeOpacity: 1.0,
                strokeWeight: 3
            };
            poly = new google.maps.Polyline(polyOptions);
            poly.setMap(map);

            // Add a listener for the click event
            // google.maps.event.addListener(map, 'click', addLatLng);
            load(dotArray);
            console.log(dotArray);
            console.log("loaded array of old location")

        }

        /**
         * Handles click events on a map, and adds a new point to the Polyline.
         * @param {google.maps.MouseEvent} event
         */
        function addLatLng(event) {

            var path = poly.getPath();

            // Because path is an MVCArray, we can simply append a new coordinate
            // and it will automatically appear.
            path.push(event.latLng);

            // Add a new marker at the new plotted point on the polyline.
            var marker = new google.maps.Marker({
                position: event.latLng,
                title: '#' + path.getLength(),
                map: map
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);


    </script>
    <script src="/js/bootstrap.min.js"></script>

</head>
<body>
<div id="top">
    <h1 class="page-header">
        Friends Locator
    </h1>
</div>
<div id="left">

    <ul class="nav  side-nav">
        <li class="active">
            <a href="index.html"><i class="fa menuColor"></i> Dashboard </a>
        </li>


    </ul>
</div>
<div id="map-canvas"></div>
</body>
</html>





